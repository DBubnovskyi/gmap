// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MapForms.Helpers;
//
//    var temperatures = Temperatures.FromJson(jsonString);

namespace MapForms.Helpers
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using System.IO;
    using System.Windows.Forms;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public class V1
    {
        public class Temperatures
        {
            [JsonProperty("type")]
            public string Type { get; set; }

            [JsonProperty("features")]
            public List<Feature> Features { get; set; }

            public static Temperatures FromJson(string fileName)
            {
                string path = Path.GetDirectoryName(Application.ExecutablePath) + $"\\DataSets\\{fileName}.json";
                if (File.Exists(path))
                {
                    string json = File.ReadAllText(path);
                    var obj = JsonConvert.DeserializeObject<Temperatures>(json, MapForms.Helpers.Converter.Settings);
                    return obj;
                }
                return null;
            }
        }

        public class Feature
        {
            [JsonProperty("type")]
            public string Type { get; set; }

            [JsonProperty("geometry")]
            public Geometry Geometry { get; set; }

            [JsonProperty("properties")]
            public Properties Properties { get; set; }
        }

        public class Geometry
        {
            [JsonProperty("type")]
            public string Type { get; set; }

            [JsonProperty("coordinates")]
            public List<List<List<List<double>>>> Coordinates { get; set; }
        }

        public class Properties
        {
            [JsonProperty("fid")]
            public long Fid { get; set; }
        }
    }
    public static partial class Serialize
    {
        public static string ToJson(this V1.Temperatures self) => JsonConvert.SerializeObject(self, MapForms.Helpers.Converter.Settings);
    }
}
